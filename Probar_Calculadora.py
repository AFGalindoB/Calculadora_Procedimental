from CalculadoraVer import EvaluarExpresion as EE
from CalculadoraVer import EvaluarFraccionarios as EF
from colorama import Fore, Style

Error = False
Text = "Todas las expresiones fueron operadas correctamente"

Tipos = ["Operaciones Basicas","Operaciones basicas (Con decimales)",
         "Operaciones basicas (Con negativos)",
         "Operaciones basicas (Con decimales y negativos)",
         "Operaciones con parentesis",
         "Operaciones con parentesis (Con decimales y negativos)",
         "Operaciones con cambio de signos (Uso de la funcion buscar simbolo perdido)",
         "Operaciones con un negativo por fuera de parentesis",
         "Operaciones con Exponentes (Regla del Producto con bases iguales)",
         "Operaciones con Exponentes (Regla del Cociente con bases iguales)"]

Expresiones = {"Op0":["5+3-2*4/2","10/2+6*3-4","8*2-10+15/3","7+6*2/3-4","12-8/4*3+7","14/2+9*3-11","16*2-18/3+5","9+8-7*2/1","20/5*3+4-6","25-5*3+12/4"],
             "Op1":["5.5+3-2*4/2","10/2.5+6.1*3-4","8*2-10.2+15/3.3","7.4+6*2/3-4.8","12.1-8/4.2*3+7","14/2.5+9*3.6-11","16.8*2-18/3+5.5","9.2+8.1-7*2/1.5","20/5*3.3+4-6.7","25.5-5*3+12/4.8"],
             "Op2":["-5+3--2*4/2","10/-2+6*-3-4","8*-2-10+15/-3","-7+6*2/-3-4","12-8/-4*3+-7","14/-2+9*3--11","16*-2-18/3+5","9+-8-7*2/1","20/5*-3+4-6","25--5*3+12/-4"],
             "Op3":["5.5+-3-2*4/2","10/-2.5+6.1*-3-4","8*2-10.2+15/-3.3","7.4+6*2/3--4.8","12.1-8/4.2*-3+7","14/2.5+9*-3.6-11","16.8*-2-18/3+5.5","-9.2+8.1-7*2/1.5","20/-5*3.3+4-6.7","25.5-5*3+12/-4.8"],
             "Op4":["5+(3+2)*4/2","10/(2+1)+(6*3)-4","8*(2-10)+15/3","7+6*(2/3)+4","12-(8/4)*3+7","((14/2)+9)*3-11","16*((2-3)+(18/3))+5","9+(8-(7*2)/1)","20/(5*(3+2))+(4-6)","(25-(5+2))*3+(12/4)"],
             "Op5":["5.5+(-3-2)*4/2","10/(-2.5+1)+(6.1*-3)-4","8*(2-10.2)+15/-3.3","7.4+6*(2/3)-(-4.8)","12.1-(8/4.2)*-3+7","((14/2.5)+9)*-3.6-11","16.8*(-(2-3)-(18/3))+5.5","-9.2+(8.1-(7*2)/1.5)","20/(-5*(3.3+2))+(4-6.7)","(25.5-(5+2))*3+(12/-4.8)"],
             "Op6":["7+(4-5*-6)/2","10/(3-2*-4)+5","8*(2-1*-3)+15/-3.3","12-(6-2*-7)/4"],
             "Op7":["5*-(3+(4-5*6))/2","4*(-(2-3)-(18/3))","-9+(8.1-(7*2)/1.5)","-(20/5*3.3)+(4-6.7)","3-(-(2*5)/2)+5*-(3+(4-5*6.2))/2"],
             "Op8":["-2^3*-2^4","-5^2*-5^3","-3^5*-3^2","-7^6*-7^1","-4^4*-4^2","5^-2*5^-3","3^-4*3^-1","8^-5*8^-2","6^-3*6^-6","2^-7*2^-4","-9^-3*-9^-2","-12^-4*-12^-1","-7^-5*-7^-3","-6^-2*-6^-4","-10^-1*-10^-6","4^3*4^5","2^4*2^2","7^6*7^1","9^2*9^3","11^1*11^7","-2^-3*-2^4","-5^2*-5^-4","-3^-5*-3^2","-7^6*-7^-2","-4^-4*-4^3","6^-2*6^4","8^3*8^-5","10^-6*10^2","12^5*12^-1","14^-3*14^7","9^-4*-9^3","-8^2*12^-6"],
             "Op9":["9^-4/-9^3","-5^-4/-5^2","-3^5/-3^-2","-7^-2/-7^6","-4^3/-4^-4","6^4/6^-2","8^-5/8^3","10^2/10^-6","12^-1/12^5","14^7/14^-3","-3^4/-3^2","-6^3/-6^1","-5^5/-5^2","-4^7/-4^3","-9^6/-9^4","5^-3/5^-2","7^-4/7^-1","9^-5/9^-2","2^-6/2^-3","4^-7/4^-4","-2^-3/-2^-4","-5^-2/-5^-3","-7^-5/-7^-1","-8^-4/-8^-6","-3^-7/-3^-5","4^5/4^2","2^3/2^1","6^7/6^3","8^4/8^2","10^6/10^4"]}

Respuestas = {"Op0":["4","19","11","7","13","23","31","3","10","13"],
              "Op1":["4.5","18.3","10.3454545454545","6.6","13.3857142857143","27","33.1","7.9666666666667","10.5","13"],
              "Op2":["2","-27","-31","-15","11","31","-33","-13","-14","37"],
              "Op3":["-1.5","-26.3","1.2545454545455","16.2","24.8142857142857","-37.8","-34.1","-10.4333333333333","-15.9","8"],
              "Op4":["15","17.3333333333333","-59","15","13","37","85","3","-1.2","57"],
              "Op5":["-4.5","-28.9666666666667","-70.1454545454545","16.2","24.8142857142857","-63.56","-78.5","-10.4333333333333","-3.4547169811321","53"],
              "Op6":["24","5.9090909090909","35.4545454545455","7"],
              "Op7":["57.5","-20","-10.2333333333333","-15.9","68"],
              "Op8":["-128","-3125","-2187","-823543","4096","0.00032","0.0041152263374","0.0000004768372","0.000000099229","0.00048828125","-0.0000169350878","-0.0000040187757","0.0000001734665","0.0000214334705","-0.0000001","65536","64","823543","59049","214358881","-2","0.04","-0.037037037037","2401","-0.25","36","0.015625","0.0001","20736","38416","-0.1111111111287","0.000021433472"],
              "Op9":["-0.0000002090752","0.000064","-2187","0.0000001734665","-16384","46656","0.0000000596046","100000000","0.000000334898","289254654976","9","36","-125","256","81","0.2","0.002915451895","0.0013717421125","0.125","0.015625","-2","-5","0.0004164931279","64","0.1111111111111","64","4","1296","64","100"]}

def comprobar(RespuestaEsperada,RespuestaResultante,Error):
    if (RespuestaEsperada == RespuestaResultante):
        if (Error):
            return True
        else:
            return False
    else:
        print("\n",Tipos[i] + ":\n",sep="")
        print(f"{Fore.RED}Expresion: '{Respuesta.Expresion}' Espera: {RespuestaEsperada} != Respuesta: {Respuesta.respuesta}{Style.RESET_ALL}")
        return True

for i in range(10):
    txt = "Op" + str(i)
    for i1 in range(len(Expresiones[txt])):
        Expresion = Expresiones[txt][i1]
        RespuestaEsperada = Respuestas[txt][i1]
        Respuesta = EE(Expresion,"No","No",VerRespuesta="NO")
        Error = comprobar(RespuestaEsperada,Respuesta.respuesta,Error)
        if i < 8:
            Respuesta = EF(Expresion,"No","No",VerRespuesta="NO")
            Error = comprobar(RespuestaEsperada,Respuesta.respuesta,Error)

if (not Error):
    print(Fore.GREEN,"="*len(Text),f"\n{Text}\n","="*len(Text),Style.RESET_ALL,sep="")
else:
    print()